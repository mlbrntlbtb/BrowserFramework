<Window x:Class="CPExtensibility.View.CPExtensibilityMainForm"
        xmlns:common="clr-namespace:TestRunner.Common;assembly=TestRunner"
        xmlns:controls="clr-namespace:TestRunner.Controls;assembly=TestRunner"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behave="clr-namespace:CPExtensibility.Behaviors"
        Title="Extensibility Tool" Height="600" Width="800"
        ResizeMode="CanResize" WindowStyle="SingleBorderWindow"  Icon="pack://siteoforigin:,,,/Resources/record.png" WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}"  CommandParameter="{Binding }" x:Name="Window_Closing" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <Style x:Key="ColHeaderStyle" x:Name="ColHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
        </Style>
        <Style x:Key="RowStyle" TargetType="DataGridRow" >
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="BlueViolet" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CellStyle" TargetType="DataGridCell" >
            <Setter Property="BorderThickness" Value="0.25"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Navy"/>
        </Style>
        <Style x:Key="CellStyle2" TargetType="DataGridCell" >
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Navy"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="50"/>
            <RowDefinition />
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition />
            <ColumnDefinition Width="5"/>
        </Grid.ColumnDefinitions>
        <Grid.Background>
            <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/Splash.png" Stretch="UniformToFill"/>
        </Grid.Background>
        <Menu Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Background="Transparent">
            <MenuItem Header="File">
                <MenuItem Header="User Guide">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ShowUserGuideCommand}" x:Name="UserGuide_Click" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="Close">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CloseToolCommand}" x:Name="btnClose_Click" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </MenuItem>
        </Menu>
        <ToolBar x:Name="tbrMain" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ToolBarTray.IsLocked="True" BorderBrush="WhiteSmoke" BorderThickness="1">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding LoadToolBarCommand}" CommandParameter="{Binding ElementName=tbrMain}" x:Name="tbr_Loaded" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button x:Name="btnNewScreen" Height="50" Width="50" ToolTip="Add a New Extensibility Screen" FontSize="10" Margin="5,0,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding AddScreenCommand}" x:Name="btnNewScreen_Click" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel>
                    <Image Source="pack://siteoforigin:,,,/Resources/addblue.png" Height="14" Width="14" Margin="0,0,0,5"/>
                    <TextBlock TextAlignment="Center" TextWrapping="Wrap">Add Screen</TextBlock>
                </StackPanel>
            </Button>
            <Separator/>
            <Button x:Name="btnEditScreen" Height="50" Width="50" FontSize="10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding EditScreenCommand}" x:Name="btnEditScreem_Click" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel>
                    <Image Source="pack://siteoforigin:,,,/Resources/edit.png" Height="14" Width="14" Margin="0,0,0,5"/>
                    <TextBlock TextAlignment="Center" TextWrapping="Wrap">Edit Screen</TextBlock>
                </StackPanel>
            </Button>
            <Separator/>
            <!--<Button x:Name="btnBeginMapping" Height="30" Width="40" Content="Begin Mapping" FontSize="6" Margin="0,0,5,0"/>-->
            <Button Height="50" Width="50" FontSize="10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding SaveScreenCommand}" x:Name="btnSaveScreen_Click" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel>
                    <Image Source="pack://siteoforigin:,,,/Resources/save.png" Height="16" Width="16" Margin="0,0,0,8"/>
                    <TextBlock TextAlignment="Center" TextWrapping="Wrap">Save</TextBlock>
                </StackPanel>
            </Button>
        </ToolBar>
        <TabControl Grid.Row="2" Grid.Column="1" Margin="3" Background="White" BorderBrush="WhiteSmoke">
            <TabItem Visibility="Hidden">
                <DockPanel Grid.Row="2" Grid.Column="1" >
                    <Label Foreground="Navy" FontWeight="Bold" Content="Screen Name:" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding Screen.ScreenName, Mode=OneWay}" Margin="0,2,0,2" IsEnabled="False"/>
                </DockPanel>
            </TabItem>
        </TabControl>
        
        <TabControl Grid.Row="3" Grid.Column="1" x:Name="tabMainForm" Margin="3" Background="White">
            <TabItem Header="Main" Visibility="Collapsed" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" x:Name="lblExistingControls">
                        <Label Content="Controls" FontWeight="Bold" Foreground="Navy"/>
                    </TextBlock>
                    <DataGrid x:Name="dgExistingControls" Style="{StaticResource DataGridStyle1}" Grid.Row="1"
                                  ColumnHeaderStyle="{StaticResource ColHeaderStyle}" VirtualizingPanel.IsVirtualizing="True"
                                  CanUserAddRows="False" CanUserSortColumns="True" IsReadOnly="True" Visibility="Visible" 
                                  CellStyle="{StaticResource CellStyle2}" 
                                  AllowDrop="True" HorizontalScrollBarVisibility="Hidden"
                                  ItemsSource="{Binding Screen.ExistingControls}"
                                  SelectedItem="{Binding Screen.SelectedControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectionUnit="FullRow">
                        <i:Interaction.Behaviors>
                            <!--<behave:ScrollIntoViewBehavior/> COMMENTED OUT, OUTDATED BLEND SDK -->
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems,ElementName=dgExistingControls}" x:Name="dgExistingControls_SelectionChanged"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.ContextMenu>
                            <ContextMenu x:Name="dgExistingControlsContextMenu">
                                <ContextMenu.Style>
                                    <Style TargetType="ContextMenu">
                                        <Setter Property="FontFamily" Value="Calibri"></Setter>
                                    </Style>
                                </ContextMenu.Style>
                                <MenuItem Name="Edit" Header="Edit Control">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding EditSelectedControlsCommand}" CommandParameter="{Binding Screen.SelectedControls}" x:Name="ctxMenuItem_Edit"></i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Name="Delete" Header="Delete Control">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding DeleteSelectedControlsCommand}" x:Name="ctxMenuItem_Delete"></i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Name="Highlight" Header="Highlight In Browser">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding HighlightSelectedControlsCommand}" x:Name="ctxMenuItem_Highlight"></i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <!--<MenuItem Name="Clear_Highlight" Header="Clear Highlighted controls">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding RemoveHighlightSelectedControlsCommand}" x:Name="ctxMenuItem_RemoveHighlight"></i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>-->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow" >
                                <Setter Property="BorderThickness" Value="0.25"/>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Navy"/>
                                <Setter Property="Height" Value="27.75"/>
                                <Setter Property="ToolTip" Value="{Binding SearchParameter}" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="BlueViolet" />
                                        <Setter Property="BorderThickness" Value="2" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header=" Control Type" MinWidth="200" Width="1*" Binding="{Binding ControlType, NotifyOnSourceUpdated=True, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserResize="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="TextAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header=" Control Name" Width="2*" Binding="{Binding ControlName, NotifyOnSourceUpdated=True, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserResize="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="TextAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
                
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="4" x:Name="StatusBar" Background="{Binding StatusBarBackground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="3">
            <TextBlock x:Name="Status" Text="{Binding StatusBarText}" FontSize="11" FontWeight="Bold"/>
        </StatusBar>
    </Grid>
</Window>
