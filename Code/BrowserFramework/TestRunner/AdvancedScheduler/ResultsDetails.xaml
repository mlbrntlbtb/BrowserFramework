<Window x:Class="TestRunner.AdvancedScheduler.ResultsDetails"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:common="clr-namespace:TestRunner.Common"
        xmlns:tr="clr-namespace:TestRunner"
        Title="Results" Height="720" Width="1280" WindowStartupLocation="CenterScreen"
        MinHeight="720" MinWidth="1280" ShowInTaskbar="True" Loaded="Window_Loaded" Activated="Window_Activated">
    <Window.Resources>                                                                                                          
        <common:DlkStringToBoolean x:Key="stringtobool" />
        <tr:DlkStepNumberConverter x:Key="snc" />
        <tr:DlkScreenConverter x:Key="scc" />
        <tr:DlkExecuteConverter x:Key="exc" />
        <Style x:Name="ExecuteColumnStyle" x:Key="ExecuteColumnStyle" TargetType="ComboBoxItem">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding}" Value="Set condition...">
                    <Setter Property="FontStyle" Value="Italic"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="gridMain" HorizontalAlignment="Stretch">
        <Grid.Background>
            <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/DeltekBackground.png" Stretch="UniformToFill"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="130" />
            <RowDefinition />
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Column="2" Grid.Row="0" Margin="10" Grid.RowSpan="2" Height="125" MinHeight="97" VerticalAlignment="Top" Background="Transparent">
            <TabItem Visibility="Hidden">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="80" />
                    </Grid.RowDefinitions>
                    <DockPanel VerticalAlignment="Top" Height="78" Margin="0,0,4,0" DockPanel.Dock="Top" Grid.Row="0" HorizontalAlignment="Stretch">
                        <TextBox x:Name="txtDuration" Text="{Binding Path=Duration, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Width="150" VerticalAlignment="Top" IsEnabled="False" IsReadOnly="True" Margin="12,3,0,3" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <Label x:Name="lblDuration" Content="Duration:" BorderThickness="0" Margin="6,0,0,0" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <TextBox x:Name="txtExecutionDate" Text="{Binding Path=ExecutionDate, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Width="150" VerticalAlignment="Top" IsEnabled="False" IsReadOnly="True" Margin="0,3" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <Label x:Name="lblExecutionDate" Content="Execution Date:" BorderThickness="0" Margin="6,0,0,0" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <Label x:Name="lblSuitePath" Content="Suite:" Margin="-1,0,0,0" Width="51" HorizontalAlignment="Left" DockPanel.Dock="Left" />
                        <TextBox x:Name="txtSuitePath" Text="{Binding Path=SuitePath, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" HorizontalAlignment="Stretch" VerticalAlignment="Top" DockPanel.Dock="Left"  Width="Auto" IsReadOnly="True" IsEnabled="False" Margin="26,3,4,3" ToolTipService.ShowOnDisabled="True" />
                    </DockPanel>
                    <DockPanel VerticalAlignment="Top" Height="80" Margin="0,0,4,0" DockPanel.Dock="Top" Grid.Row="1" Grid.RowSpan="2" HorizontalAlignment="Stretch">
                        <TextBox x:Name="txtUserName" Text="{Binding Path=UserName, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Width="150" VerticalAlignment="Top" IsEnabled="False" IsReadOnly="True" Margin="0,3" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <Label x:Name="lblUserName" Content="User Name:" BorderThickness="0" Margin="6,0,0,0" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <TextBox x:Name="txtMachineName" Text="{Binding Path=MachineName, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Width="150" VerticalAlignment="Top" IsEnabled="False" IsReadOnly="True" Margin="-1,3,0,3" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <Label x:Name="lblMachineName" Content="Machine Name:" BorderThickness="0" Margin="6,0,0,0" HorizontalAlignment="Right" DockPanel.Dock="Right"/>

                        <Label x:Name="lblDescription" Content="Description:" Margin="-1,0,0,0" Width="75" VerticalAlignment="Top" HorizontalAlignment="Left" DockPanel.Dock="Left" />
                        <TextBox x:Name="txtDescription" Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" IsEnabled="False" HorizontalAlignment="Stretch" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto" BorderBrush="Silver" DockPanel.Dock="Left"  Width="Auto" Height="75" Margin="2,3,4,0" ToolTipService.ShowOnDisabled="True" TextWrapping="Wrap" AcceptsReturn="True"/>

                    </DockPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,23,0,0" Grid.Row="2" HorizontalAlignment="Right">
                        <Label x:Name="lblOperatingSystem" Content="Operating System:" BorderThickness="0" Margin="0,0,0,0" Padding="5,3,0,0" HorizontalAlignment="Right" />
                        <TextBox x:Name="txtOperatingSystem" Text="{Binding Path=OperatingSystem, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Width="377" Height="48" IsEnabled="False" IsReadOnly="True" Margin="4,3" />
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>

        <DockPanel x:Name="CenterStack" Margin="10" Grid.Column="2" Grid.Row="1" VerticalAlignment="Stretch">
            <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Left" DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="303" MaxHeight="490"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TabControl Name="tabTests" Grid.Row="0">
                        <TabItem Header="Tests" Visibility="Collapsed">
                            <Grid VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="23" />
                                </Grid.RowDefinitions>
                                <DataGrid HorizontalAlignment="Left" Grid.Row="0" x:Name="TestQueue" ItemsSource="{Binding ExecutionQueueRecords}" RowHeaderWidth="0"
            	                    Style="{StaticResource DataGridStyle1}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
            	                    SelectionMode="Single" IsReadOnly="True" Background="LemonChiffon" SelectionUnit="FullRow"
            	                    CanUserAddRows="False" CanUserDeleteRows="False"
            	                    RowStyle="{StaticResource DataGridRowStyle0}" SelectionChanged="TestQueue_SelectionChanged"
                                    DockPanel.Dock="Top" VirtualizingStackPanel.IsVirtualizing="True" VerticalAlignment="Stretch" CanUserResizeColumns="True">
                                    <DataGrid.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding teststatus}" Value="Not Run" >
                                                    <Setter Property="Background" Value="White" />
                                                    <Setter Property="Foreground" Value="Navy" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding teststatus}" Value="Passed" >
                                                    <Setter Property="Background" Value="LightGreen" />
                                                    <Setter Property="Foreground" Value="Navy" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding teststatus}" Value="Failed" >
                                                    <Setter Property="Background" Value="MistyRose" />
                                                    <Setter Property="Foreground" Value="Navy" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding testrow}" CanUserSort="False" CanUserReorder="False" CanUserResize="True"  Header="#" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}" IsReadOnly="True" Width="25"/>
                                        <DataGridTextColumn x:Name="ExecuteColumn" Binding="{Binding execute}" CanUserSort="False" CanUserReorder="False" CanUserResize="True"  Header="Execute" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" Width="75">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="TestDisplayName" Binding="{Binding file}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyleTestQueue}" IsReadOnly="True"
                                        Width="*">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <DockPanel>
                                                        <TextBlock x:Name="txtDisplayNameHeader" Text="File Name" Loaded="btnDisplayName_Loaded" />
                                                        <Button Name="btnDisplayName" HorizontalAlignment="Right" Margin="5,0,5,0" Width="20" Height="15" Content="&#9660;" 
                                                                ContextMenuService.IsEnabled="false" FontSize="8" ToolTip="Choose display type" Click="btnDisplayName_Click">
                                                        </Button>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="ToolTipService.ToolTip" Value="{Binding name}" />
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding instance}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Instance" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="50">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding description}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Description" HeaderStyle="{StaticResource DataGridColumnHeaderStyle6}" IsReadOnly="True" Width="250">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="ToolTipService.ToolTip" Value="{Binding description}" />
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="TestEnvironmentColumn" Binding="{Binding environment}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Environment" HeaderStyle="{StaticResource DataGridColumnHeaderStyleTestQueue}" Width="100">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="TestBrowserColumn" Binding="{Binding Browser.Name}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Browser" HeaderStyle="{StaticResource DataGridColumnHeaderStyleTestQueue}"  Width="80">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Keep Open?" Binding="{Binding keepopen}"  CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="70">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>                                        
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding executedsteps}"  CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Completed" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="70">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Binding="{Binding duration}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Duration" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}" Width="100" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Grid Margin="0,0,1,0" RenderTransformOrigin="0.585,0.208" Grid.Row="1" VerticalAlignment="Stretch">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
                                        <Rectangle Fill="LightGreen" Stroke="Silver" Height="12" Width="12" StrokeThickness="0.5"></Rectangle>
                                        <TextBlock Width="3"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="10">Passed</TextBlock>
                                        <TextBlock Width="2"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="10" FontStyle="Italic">
                                            (
                                            <TextBlock Text="{Binding Path=Passed, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            )
                                        </TextBlock>
                                        <TextBlock Width="10"/>
                                        <Rectangle Fill="MistyRose" Stroke="Silver" Height="12" Width="12" StrokeThickness="0.5"></Rectangle>
                                        <TextBlock Width="3"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="10">Failed</TextBlock>
                                        <TextBlock Width="2"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="10" FontStyle="Italic" >
                                            (
                                            <TextBlock Text="{Binding Path=Failed, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                            )
                                        </TextBlock>
                                        <TextBlock Width="10"/>
                                        <Rectangle Fill="White" Stroke="Silver" Height="12" Width="12" StrokeThickness="0.5"></Rectangle>
                                        <TextBlock Width="3"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="10">Not run</TextBlock>
                                        <TextBlock Width="2"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="10" FontStyle="Italic">
                                            (
                                            <TextBlock Text="{Binding Path=NotRun, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                                            )
                                        </TextBlock>
                                        
                                    </StackPanel>
                                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="11">
                                        Test Count:
                                        <TextBlock Text="{Binding Path=Total, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" FontWeight="Bold" Foreground="Navy" VerticalAlignment="Center"/>
                                        <TextBlock Width="15"/>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </TabItem>
                    </TabControl>
                    <GridSplitter x:Name="horizontalSplitter" Grid.Row="1" ShowsPreview="False" Height="Auto" BorderBrush="Gray"  VerticalAlignment="Stretch" 
                                          BorderThickness="1,0,0,1" HorizontalAlignment="Stretch" Opacity="0"/>
                    <TabControl x:Name="tabControlTestResultDetails" Grid.Row="4" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Margin="0,2,0,0" >
                        <TabItem x:Name="tabLog" Header="Log" Background="#FF90D2FF">
                            <DataGrid x:Name="dgLogTestSteps" ItemsSource="{Binding}" RowHeaderWidth="0" VerticalAlignment="Stretch"
                                  Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle7}" 
                                  Background="LemonChiffon" SelectionMode="Single" 
                                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible"
                                  Margin="0,0,0,0" CanUserResizeColumns="True" 
                                  LoadingRow="dgLogTestSteps_LoadingRow" RowDetailsVisibilityMode="Collapsed"
                                  AutoGenerateColumns="False" HorizontalAlignment="Left">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding mStepNumber, Converter={StaticResource snc}}" CanUserSort="False" CanUserReorder="False" CanUserResize="True"  Header="Step" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}" IsReadOnly="True" Width="35"/>
                                    <DataGridTextColumn Binding="{Binding mExecute, Converter={StaticResource exc}}" CanUserSort="False" CanUserReorder="False" CanUserResize="True"  Header="Execute" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="70"/>
                                    <DataGridTextColumn Binding="{Binding mScreen, Converter={StaticResource scc}}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Screen" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="170"/>
                                    <DataGridTextColumn Binding="{Binding mControl}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Control" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="170"/>
                                    <DataGridTextColumn Binding="{Binding mKeyword}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Keyword" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" IsReadOnly="True" Width="190"/>
                                    <DataGridTextColumn Binding="{Binding mParameterString}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" Header="Parameters" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}"
                                                    IsReadOnly="True" Width="215">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding mStepStatus}" CanUserSort="False" CanUserReorder="False" 
                                                    CanUserResize="True" Header="Status" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}" 
                                                    IsReadOnly="True" Width="*"/>
                                </DataGrid.Columns>
                                <DataGrid.ItemContainerStyle>
                                    <Style TargetType="DataGridRow">
                                        <EventSetter Event="MouseLeftButtonUp" Handler="LogRow_Click"/>
                                        <Setter Property="BorderThickness" Value="0.25"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="BorderBrush" Value="BlueViolet" />
                                                <Setter Property="BorderThickness" Value="2" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding mKeyword}" Value="LogComment">
                                                <Setter Property="Background" Value="Orange"/>
                                                <Setter Property="BorderBrush" Value="OrangeRed"/>
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding mKeyword}" Value="Note">
                                                <Setter Property="Background" Value="Yellow"/>
                                                <Setter Property="BorderBrush" Value="YellowGreen"/>
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding mKeyword}" Value="Hint">
                                                <Setter Property="Background" Value="LightGreen"/>
                                                <Setter Property="BorderBrush" Value="Green"/>
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding mKeyword}" Value="ExpectedResult">
                                                <Setter Property="Background" Value="LightPink"/>
                                                <Setter Property="BorderBrush" Value="DeepPink"/>
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding mKeyword}" Value="Step">
                                                <Setter Property="Background" Value="LightPink"/>
                                                <Setter Property="BorderBrush" Value="DeepPink"/>
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding mExecute}" Value="False">
                                                <Setter Property="Foreground"  Value="Gray"/>
                                                <Setter Property="FontStyle"  Value="Italic"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.ItemContainerStyle>
                                <DataGrid.RowDetailsTemplate>
                                    <DataTemplate>
                                        <Border Margin="3" Padding="3" BorderBrush="SteelBlue" BorderThickness="3" CornerRadius="5">
                                            <DataGrid ItemsSource="{Binding mStepLogMessages}" 
                                                  RowHeaderWidth="0" Style="{StaticResource DataGridStyle1}" 
                                                  SelectionMode="Single" 
                                                  Width="595"
                                                  VerticalScrollBarVisibility="Visible"
                                                  MaxHeight="190" VirtualizingStackPanel.IsVirtualizing="False" Loaded="LoadLogDetailsGrid">
                                                <DataGrid.ItemContainerStyle>
                                                    <Style TargetType="DataGridRow">
                                                        <EventSetter Event="MouseLeftButtonUp" Handler="LogRowDetails_Click"/>
                                                    </Style>
                                                </DataGrid.ItemContainerStyle>
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Binding="{Binding mMessageDateTime}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="DateTime" Width="100" IsReadOnly="True"/>
                                                    <DataGridTextColumn Binding="{Binding mMessageType}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Type" Width="95" IsReadOnly="True"/>
                                                    <DataGridTextColumn Binding="{Binding mMessageDetails}" CanUserSort="False" CanUserReorder="False" CanUserResize="False" Header="Details" 
                                                                Width="400" IsReadOnly="True">
                                                        <DataGridTextColumn.ElementStyle>
                                                            <Style>
                                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding mMessageType}" Value="EXCEPTIONIMG" >
                                                                        <Setter Property="TextBlock.Foreground" Value="Blue"/>
                                                                        <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding mMessageType}" Value="OUTPUTFILE" >
                                                                        <Setter Property="TextBlock.Foreground" Value="Blue"/>
                                                                        <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </DataGridTextColumn.ElementStyle>
                                                    </DataGridTextColumn>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Border>
                                    </DataTemplate>
                                </DataGrid.RowDetailsTemplate>
                            </DataGrid>
                        </TabItem>
                        <TabItem x:Name="tabErrorScreenshot" Header="Error Screenshot" Background="#FF90D2FF">
                            <TabItem.Style>
                                <Style TargetType="TabItem">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=imgError, Path=Source}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TabItem.Style>
                            <Grid Height="Auto">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="25"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image x:Name="imgError" Source="{Binding Path=ErrorScreenShot, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Stretch="UniformToFill" Grid.Row="0"
                                       Visibility="Visible"/>
                                <Button x:Name="btnViewErrorScreenshot" Click="btnViewErrorScreenshot_Click"

                                Content="View Screenshot" Width="90" HorizontalAlignment="Right" Margin="0,0,0,0" Grid.Row="1" VerticalAlignment="Bottom">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Foreground" Value="White" />
                                            <Setter Property="Background" Value="SteelBlue" />
                                            <Setter Property="FontSize" Value="10" />
                                            <Setter Property="Width" Value="50" />
                                            <Setter Property="Height" Value="20" />
                                            <Setter Property="Margin" Value="2,2,2,2" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.5" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ElementName=imgError, Path=Source}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </DockPanel>
        </DockPanel>
        <StatusBar Name="stsMain" Height="Auto" Grid.Row="4" Width="Auto" Grid.ColumnSpan="3" Background="White" BorderThickness="0">
            <StatusBarItem DockPanel.Dock="Right" Margin="0,0,10,0">
                <Button x:Name="btnEmail" DockPanel.Dock="Right" BorderBrush="Transparent" Background="Transparent" Focusable="False" Click="btnEmail_Click" ToolTip="Email results...">
                    <Image Source="pack://siteoforigin:,,,/Resources/envelope.png" Height="18" Width="18" VerticalAlignment="Center"/>
                </Button>
            </StatusBarItem>
            <StatusBarItem Margin="10,0,0,0">
                <TextBlock>Pass Rate:</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Path=PassRate, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                        FontWeight="ExtraBold" Margin="0,0,5,0" Foreground="Navy"/>
            </StatusBarItem>
            <StatusBarItem Margin="10,0,0,0">
                <TextBlock>Completion Rate:</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Path=CompletionRate, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                        FontWeight="ExtraBold" Margin="0,0,5,0" Foreground="Navy"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
