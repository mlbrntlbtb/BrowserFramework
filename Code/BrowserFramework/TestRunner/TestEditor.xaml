<Window x:Class="TestRunner.TestEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tr="clr-namespace:TestRunner"
        xmlns:local="clr-namespace:TestRunner.Common"
        xmlns:controls="clr-namespace:TestRunner.Controls"
        Title="TestEditor" MinHeight="800" MinWidth="1280" Width="1280" Height="800" Loaded="Window_Loaded" WindowStartupLocation="CenterOwner" 
        ShowInTaskbar="True" Closing="Window_Closing" Activated="Window_Activated">
    <!--Icon="pack://siteoforigin:,,,/Resources/Winmpm.ico">-->
    <Window.Resources>
        <!--<local:DlkVariableParameterChecker x:Key="variableparamchecker"/>-->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/DeltekBackground.png" Stretch="UniformToFill"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="23"/>
        </Grid.RowDefinitions>
        <Grid x:Name="grdMainGrid">
            <DockPanel Height="24" HorizontalAlignment="Left" Name="dockPanel1" VerticalAlignment="Top" Width="100">
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
                <Menu Height="23" Name="mnuMain" Width="1271">
                    <Menu.Background>
                        <SolidColorBrush />
                    </Menu.Background>
                    <MenuItem Header="File">
                        <MenuItem Header="Export as HTML" Name="ExportHTML" Visibility="Collapsed">
                            <MenuItem Header="Save..." Click="SaveTestAsHtml"/>
                            <MenuItem Header="Send via Email..." Click="EmailTestHtml"/>
                        </MenuItem>
                        <MenuItem Header="Close" Click="Close"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <DockPanel LastChildFill="True">
                <StackPanel Orientation="Vertical" x:Name="panelMainRight" Grid.Column="1" Margin="20,15,20,21" HorizontalAlignment="Left" Grid.ColumnSpan="2" DockPanel.Dock="Right" VerticalAlignment="Stretch">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <StackPanel Orientation="Vertical" x:Name="panelmMainRightBottom">
                        <Label x:Name="lblStep" Content="Step " BorderThickness="0,0,0,0" FontWeight="SemiBold"/>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox x:Name="chkBoxExecuteStep" ToolTip="Check to enable updating execute step" Visibility="Collapsed" Margin="0,5,-2,0" Click="chkBoxExecuteStep_CheckBoxChanged"/>
                            <Label x:Name="lblExecuteStep" Content="Execute Step:" Margin="0"/>
                        </StackPanel>
                        <ComboBox x:Name="cmbExecuteStep" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" IsEditable="True">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="Green" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                        <Separator HorizontalAlignment="Stretch" IsEnabled="False"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="True">
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="Foreground" Value="Black" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding}" Value="False">
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="Foreground" Value="Black" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblScreen" Content="Screen:" Margin="0,5,0,0"/>
                            <Image x:Name="infoImg" Source="pack://siteoforigin:,,,/Resources/info.png" Height="15" Width="15" Margin="-4,5,0,0" Visibility="Collapsed"/>
                            <controls:LoadingAnimation x:Name="ctlScreenLoading" Width="12" Visibility="{Binding Path=StillLoading, Converter={StaticResource BoolToVis}}" IsVisibleChanged="ctlScreenLoading_IsVisibleChanged"/>
                        </StackPanel>
                        <ComboBox x:Name="cmbComponent" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" SelectionChanged="cmbComponent_SelectionChanged" IsEditable="True" LostFocus="cmbComponent_LostFocus"/>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblControl" Content="Control:"/>
                            <Image x:Name="filterImg" Source="pack://siteoforigin:,,,/Resources/filter.png" Height="15" Width="15" Margin="-5,0,0,0" MouseUp="filterImg_MouseUp">
                                <Image.ContextMenu>
                                    <ContextMenu x:Name="ctrlFilterMenu" ItemsSource="{Binding}">
                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Header" Value="{Binding ControlType}"/>
                                                <Setter Property="IsCheckable" Value="True"/>
                                                <Setter Property="IsChecked" Value="{Binding Selected}"/>
                                                <Setter Property="FontSize" Value="10"/>
                                                <EventSetter Event="Click" Handler="filterControls_Click"/>
                                                <Style.Triggers>
                                                    <Trigger Property="Header"  Value="Select All">
                                                        <Setter Property="FontWeight"  Value="Bold" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </ContextMenu>
                                </Image.ContextMenu>
                            </Image>
                            <controls:LoadingAnimation x:Name="ctlControlLoading" Width="12" Visibility="{Binding Path=StillLoading, Converter={StaticResource BoolToVis}}"/>
                        </StackPanel>
                        <!--<ComboBox x:Name="cmbControl" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" SelectionChanged="cmbControl_SelectionChanged" IsEditable="True"/>-->
                        <!--<TextBox x:Name="txtControl" KeyUp="txtControl_KeyUp" GotFocus="txtControl_GotFocus" LostFocus="txtControl_LostFocus" />
                    <ListBox x:Name="lbControls" MaxWidth="250px" MaxHeight="250px" ItemsSource="{Binding}" Visibility="Collapsed" SelectionChanged="lbControls_SelectionChanged" KeyUp="lbControls_KeyUp" Focusable="True" 
                             ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" x:Name="tbControlType" Foreground="Gray" Text="{Binding ControlType}"/>
                                    <TextBlock Grid.Column="1" x:Name="tbControlName" Text="{Binding ControlName}" ToolTip="{Binding ControlName}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ListBox>-->
                        <ComboBox x:Name="cmbControl" Style="{StaticResource ComboBoxStyleVSP}" ItemsSource="{Binding}" SelectionChanged="cmbControl_SelectionChanged" IsEditable="True" TextSearch.TextPath="ControlName"
                               IsTextSearchEnabled="True" SelectedValuePath="ControlName" LostFocus="cmbControl_LostFocus" GotFocus="cmbControl_GotFocus" KeyUp="cmbControl_KeyUp" PreviewKeyDown="cmbControl_PreviewKeyDown">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="horizontal">
                                        <TextBlock x:Name="tbControlType" Width="110" Foreground="Gray" Text="{Binding ControlType}"/>
                                        <TextBlock x:Name="tbControlName" Text="{Binding ControlName}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblKeyword" Content="Keyword:" Margin="0,5,0,0"/>
                            <controls:LoadingAnimation x:Name="ctlKeywordLoading" Width="12" Visibility="{Binding Path=StillLoading, Converter={StaticResource BoolToVis}}"/>
                        </StackPanel>

                        <ComboBox x:Name="cmbKeyword" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" SelectionChanged="cmbKeyword_SelectionChanged" MouseEnter="cmbKeyword_MouseEnter" IsEditable="True" LostFocus="cmbKeyword_LostFocus" PreviewKeyDown="cmbKeyword_PreviewKeyDown"/>

                        <Label x:Name="lblParameters" Content="Parameters:" Margin="0,5,0,0"/>
                        <TextBox x:Name="txtParameters" Style="{StaticResource TextBoxStyle2}" Width="250" Margin="0" MinHeight="50" TextWrapping="Wrap" Visibility="Collapsed"/>
                        <DataGrid x:Name="dgParameters" ItemsSource="{Binding}" Style="{StaticResource DataGridStyle3}" SelectionUnit="Cell" SelectionMode="Single" 
                              MinHeight="25" MaxHeight="125" Height="Auto" BorderThickness="1"
                              VerticalScrollBarVisibility="Auto">
                            <DataGrid.Columns>
                                <DataGridTextColumn IsReadOnly="True" Binding="{Binding mParameterName}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Parameters" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}"  Width="125">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" >
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontSize" Value="11" />
                                            <Setter Property="BorderThickness" Value="0.25"/>
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Margin" Value="5,0,0,0" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Values" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" Width="125">
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="White" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="IsTabStop" Value="False"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="15"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox Text="{Binding mValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.ColumnSpan="2" Width="150" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox">
                                                            <EventSetter Event="TextChanged" Handler="PasswordChanged"/>
                                                            <EventSetter Event="PreviewTextInput" Handler="PreviewPasswordInput"/>
                                                            <EventSetter Event="GotFocus" Handler="EditCell"/>
                                                            <Setter Property="TextWrapping" Value="Wrap" />
                                                            <Setter Property="AcceptsReturn" Value="true" />
                                                            <Setter Property="MaxHeight" Value="125" />
                                                            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="MaxWidth" Value="125"/>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <Button x:Name="btnInsertDataValue" Click="btnInsertDataValue_Click" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Column="1" Width="10" Height="10" 
                                                    ToolTip="Click to insert value from Data View" Tag="{Binding mIndex}" IsTabStop="False">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="Button">
                                                                        <Border Background="Transparent">
                                                                            <ContentPresenter/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=DataTableHasColumns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <Image Source="pack://siteoforigin:,,,/Resources/GreenCorner.png" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox x:Name="chkBoxStepDelay" ToolTip="Check to enable updating step delay" Visibility="Collapsed" Margin="0,11,-3,0" Click="chkBoxStepDelay_CheckBoxChanged"/>
                            <StackPanel Orientation="Horizontal">
                                <Label x:Name="lblStepDelay" Content="Step Delay " Margin="0,5,-10,0"/>
                                <Label Content="(occurs after step executes):" Margin="0,5,0,0"/>
                            </StackPanel>
                        </StackPanel>
                        <TextBox x:Name="txtDelay" Style="{StaticResource TextBoxStyle1}" Width="30" MaxLength="2" BorderThickness="1" Margin="0,0,5,0" ToolTip="Step Delay Seconds"/>
                        <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepUpdate" Content="_Update" Margin="0" ToolTip="Update Step"
                    HorizontalAlignment="Right"
                    Click="btnTestStepUpdate_Click" BorderThickness="3"/>
                        <!--<CheckBox x:Name="chkUpdateAll" Content="Update all test instances" HorizontalAlignment="Right"/>-->
                    </StackPanel>
                    <Label x:Name="lblHelp" Content="Info:" Margin="0,5,0,0"/>
                    <Border x:Name="borderHelp" BorderThickness="1.2" BorderBrush="#FF688CAF" Margin="0,5">
                        <DockPanel x:Name="dockHelp" Width="250" Background="#FFE3E3E3" Height="138">
                            <ScrollViewer>
                                <TextBlock x:Name="txtHelp" TextWrapping="Wrap" Margin="4,0,4,5">Information for keywords will be displayed here</TextBlock>
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </StackPanel>
                <DockPanel x:Name="panelMainTestButtons" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Grid.Column="3" Margin="20,25,3,0" DockPanel.Dock="Top" LastChildFill="True">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <Label Content="Test Name" Style="{StaticResource LabelStyle1}" DockPanel.Dock="Left" Margin="0,0,-10,0" FontWeight="SemiBold"/>
                    <Button Style="{StaticResource ButtonStyle2}" Content="Close" x:Name="btnCloseTest" Click="Close" VerticalAlignment="Center" DockPanel.Dock="Right" ToolTip="Close Test"/>
                    <Button Style="{StaticResource ButtonStyle2}" Content="Save As" x:Name="btnSaveTestAs" Click="btnSaveTestAs_Click" VerticalAlignment="Center" DockPanel.Dock="Right" ToolTip="Save Test As"/>
                    <Button Style="{StaticResource ButtonStyle2}" Content="Save" x:Name="btnSaveTest" Click="btnSaveTest_Click" VerticalAlignment="Center" DockPanel.Dock="Right" ToolTip="Save Test"/>
                    <Button Style="{StaticResource ButtonStyle2}" Content="New" x:Name="btnNewTest" Click="btnNewTest_Click" VerticalAlignment="Center" DockPanel.Dock="Right" ToolTip="New Test"/>
                    <TextBox x:Name="txtTestName" Style="{StaticResource TextBoxStyle1}" MinWidth="480" Width="Auto" HorizontalAlignment="Stretch" />
                </DockPanel>
                <DockPanel x:Name="PanelTestDescription" Margin="20,4,0,0" Width="Auto" MinWidth="560" DockPanel.Dock="Top" LastChildFill="True">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <Label Content="Description" Style="{StaticResource LabelStyle1}" DockPanel.Dock="Left" Height="61" Margin="0,0,-10,0" FontWeight="SemiBold"/>
                    <TextBox x:Name="txtTestDescription" Style="{StaticResource TextBoxStyle2}" Width="Auto" MinWidth="560" HorizontalAlignment="Stretch"  Height="61" />
                </DockPanel>
                <DockPanel x:Name="PanelTestAuthor" Margin="20,4,0,0" Width="Auto" MinWidth="480" DockPanel.Dock="Top" LastChildFill="True">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <Label Content="Author" Style="{StaticResource LabelStyle1}" DockPanel.Dock="Left" Height="25" Margin="0,0,-10,0" FontWeight="SemiBold"/>
                    <TextBox x:Name="txtTestAuthor" Style="{StaticResource TextBoxStyle1}" Width="Auto" MinWidth="480" HorizontalAlignment="Stretch"/>
                </DockPanel>
                <DockPanel x:Name="PanelTestExecutionSetting" Margin="15,4,0,0" Width="Auto" DockPanel.Dock="Top" LastChildFill="True" HorizontalAlignment="Left">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <CheckBox Name="chkContinueOnError" ToolTip="Check to continue execution until end of script" Margin="80,5,10,0" Height="20" Grid.Row="0" Click="chkContinueOnError_Click">
                        Continue on error
                    </CheckBox>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="0,0,5,5">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>
                    <TextBlock HorizontalAlignment="Right" Margin="0,0,5,0" DockPanel.Dock="Right">
                    <Hyperlink x:Name="lnkLink" Click="Links_Click" ToolTip="Links">
                        <Hyperlink.Style>
                            <Style TargetType="Hyperlink">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsTemplateLoaded, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Hyperlink.Style>
                        Links
                    </Hyperlink>
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Right" Margin="0,0,25,0" DockPanel.Dock="Right">
                    <Hyperlink x:Name="lnkTag" Click="Tags_Click" ToolTip="Tags">
                        <Hyperlink.Style>
                            <Style TargetType="Hyperlink">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsTemplateLoaded, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Hyperlink.Style>
                        Tags
                    </Hyperlink>
                    </TextBlock>
                </DockPanel>
                <TabControl Name="tabMain" Margin="20,0,5,20">
                    <TabItem Name="tabKW" Header="Keyword" Visibility="Collapsed" IsSelected="True">
                        <DockPanel x:Name="dpKWMain">
                            <Grid DockPanel.Dock="Top" Background="DarkGray">
                                <Grid Background="#FF90D2FF" Margin="1,1,1,1">
                                    <ToolBar Background="Transparent" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Height="28" Margin="-5,0,-25,0" Padding="5,0,25,0" >
                                        <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                        <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                        <StackPanel Orientation="Horizontal" ClipToBounds="True">
                                            <!--<Label Margin="-4,0,0,0" Width="" BorderBrush="DarkGray" BorderThickness="0,0,0,0">View</Label>-->
                                            <RadioButton x:Name="optKWView" Margin="0,0,20,0" Click="optKWView_Click" Content="Keyword View" IsChecked="True" VerticalAlignment="Center" ToolTip="Keyword View Only" />
                                            <RadioButton x:Name="optSplitView" Margin="0,0,20,0" Click="optSplitView_Click" Content="Keyword/Data Split View" IsChecked="False" VerticalAlignment="Center" ToolTip="Keyword with Data Split View"></RadioButton>
                                            <RadioButton x:Name="optDataView" Margin="0,0,20,0" Click="optDataView_Click" Content="Data View" IsChecked="False" VerticalAlignment="Center" ToolTip="Data View Only"></RadioButton>
                                            <RadioButton x:Name="optOutput" Margin="0,0,0,0" Click="optOutput_Click"  Content="Output View" IsChecked="False" VerticalAlignment="Center" ToolTip="Output View"></RadioButton>
                                        </StackPanel>
                                    </ToolBar>
                                    <StackPanel Orientation="Vertical" ClipToBounds="True">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="IsEnabled" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <ToolBar HorizontalAlignment="Right" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" DockPanel.Dock="Right" Background="Transparent" Margin="-5,0,-18,0" Padding="5,0,18,0">
                                            <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                            <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                            <StackPanel VerticalAlignment="Center">
                                                <Button Style="{StaticResource ButtonStyle2}" x:Name="btnRun" ToolTip="Run Test" Width="50"  Click="btnRun_Click" Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock>Run</TextBlock>
                                                        <Image Source="pack://siteoforigin:,,,/Resources/play.png" Width="14" Height="14"/>
                                                    </StackPanel>
                                                </Button>
                                            </StackPanel>
                                        </ToolBar>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                            <Grid x:Name="grdMain">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="rowKeyword"/>
                                    <RowDefinition x:Name="rowSplitter" Height="Auto"/>
                                    <RowDefinition x:Name="rowData"/>
                                    <RowDefinition x:Name="rowOutput"/>
                                </Grid.RowDefinitions>
                                <DockPanel x:Name="dpKW" Grid.Row ="0" VerticalAlignment="Stretch">
                                    <DockPanel DockPanel.Dock="Top">
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Setter Property="IsEnabled" Value="True"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0"/>
                                        <StackPanel Orientation="Vertical" ClipToBounds="True">
                                            <ToolBar HorizontalAlignment="Left" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" DockPanel.Dock="Left" Background="Transparent" Margin="-5,0,-18,0" Padding="5,0,15,0">
                                                <!--<TextBlock Margin="0,0,10,0" FontSize="12" VerticalAlignment="Center">Steps</TextBlock>-->
                                                <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                                <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepNew" ToolTip="New Test Step" Click="btnTestStepNew_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/add.png" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">New</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepInsert" ToolTip="Insert Test Step(s)" Click="btnTestStepInsert_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/insert_table_row.png" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Insert</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepCopy" ToolTip="Copy Step(s)" Click="btnTestStepCopy_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/copy.png" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Copy</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepPaste" ToolTip="Paste Overwrite" IsEnabled="False" Click="btnTestStepPaste_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <DockPanel>
                                                            <StackPanel Orientation="Vertical">
                                                                <Image Source="pack://siteoforigin:,,,/Resources/paste.png" Height="16" Width="16"/>
                                                                <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Paste</TextBlock>
                                                            </StackPanel>
                                                            <GridSplitter BorderBrush="Gray" BorderThickness="0,0,1,0" Opacity="0.2" Margin="3" Foreground="Black"/>
                                                            <Menu Background="Transparent" Height="20" Width="20"  Margin="-10,0,0,0">
                                                                <MenuItem x:Name="btnPasteType" Click="btnPasteType_Click" ToolTip="Paste Options">
                                                                    <MenuItem.Icon>
                                                                        <Image Source="pack://siteoforigin:,,,/Resources/bullet_arrow_down.png" Width="10" Height="20"/>
                                                                    </MenuItem.Icon>
                                                                    <MenuItem.ContextMenu>
                                                                        <ContextMenu x:Name="cmnuPasteType"/>
                                                                    </MenuItem.ContextMenu>
                                                                </MenuItem>
                                                            </Menu>
                                                        </DockPanel>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepDelete" ToolTip="Delete Step(s)" Click="btnTestStepDelete_Click" IsEnabled="False">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/button_cancel.ico" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Delete</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepUp" ToolTip="Move Up" Click="btnTestStepUp_Click" IsEnabled="False">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/arrow_up.png" Height="12" Width="12" Margin="0,1,0,2"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Up</TextBlock>
                                                        <!--<Image Source="pack://siteoforigin:,,,/Resources/arrow_up.png" Height="12" Width="12"/>
                                                <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Margin="0,3,0,0">Up</TextBlock>-->
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnTestStepDown" ToolTip="Move Down" Click="btnTestStepDown_Click" IsEnabled="False">
                                                    <StackPanel Orientation="Vertical">
                                                        <!--<Image Source="pack://siteoforigin:,,,/Resources/arrow_down.png" Height="12" Width="12"/>
                                                <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Margin="0,3,0,0">Down</TextBlock>-->
                                                        <Image Source="pack://siteoforigin:,,,/Resources/arrow_down.png" Margin="0,1,0,2" Height="12" Width="12"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Down</TextBlock>

                                                    </StackPanel>
                                                </Button>
                                            </ToolBar>
                                        </StackPanel>
                                        <GridSplitter BorderBrush="Gray" BorderThickness="0,0,1,0" Opacity="0.2"/>
                                        <StackPanel Orientation="Vertical" ClipToBounds="True">
                                            <ToolBar HorizontalAlignment="Left" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Background="Transparent" Margin="-5,0,-18,0" Padding="6,0,17,0">
                                                <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                                <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnPopulateDataView" ToolTip="Convert Selected Step(s) to Data Driven Test" Click="btnPopulateDataView_Click" IsEnabled="True">
                                                    <StackPanel Orientation="Vertical" >
                                                        <Image Source="pack://siteoforigin:,,,/Resources/generate_data.png" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Convert to Data</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <ToggleButton x:Name="btnGridFilter" ToolTip="Filter" Click="btnGridFilter_Click" IsEnabled="True">
                                                    <StackPanel Orientation="Vertical" >
                                                        <Image Source="pack://siteoforigin:,,,/Resources/filter.png" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Filter</TextBlock>
                                                    </StackPanel>
                                                </ToggleButton>
                                            </ToolBar>
                                        </StackPanel>
                                        <GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0"/>
                                    </DockPanel>
                                    <DataGrid x:Name="dgTestSteps" ItemsSource="{Binding}" Grid.Column="0" VerticalScrollBarVisibility="Visible"
            	                    Style="{StaticResource DataGridStyle1}" RowStyle="{StaticResource DataGridRowStyle1}" CellStyle="{StaticResource DataGridCellStyle5}"
            	                    HorizontalScrollBarVisibility="Hidden"
            	                    SelectionMode="Extended"  VerticalAlignment="Stretch"  Height="Auto" RowHeaderWidth="0"
            	                    IsReadOnly="True"
            	                    SelectionChanged="dgTestSteps_SelectionChanged" Background="#FF90D2FF" VirtualizingStackPanel.IsVirtualizing="False" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" FocusManager.IsFocusScope="True">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding mStepNumber}" CanUserSort="False" CanUserReorder="False" CanUserResize="True"  Header="Step" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}"  Width="40" />
                                            <DataGridTextColumn Binding="{Binding mExecute}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyle7}" Width="80">
                                                <DataGridTextColumn.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel LastChildFill="False">
                                                            <TextBlock x:Name="txtExecuteHeader" Text="Execute" />
                                                            <Button Name="btnExecuteFilter" DockPanel.Dock="Right" Margin="10,0,5,0" Width="20" Height="14" Content="&#9660;" FontSize="8" Click="btnExecuteFilter_Click" ToolTip="Filter..." Visibility="{Binding IsChecked, ElementName=btnGridFilter, Converter={StaticResource BoolToVis}}"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTextColumn.HeaderTemplate>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding mScreen}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyle7}" Width="140">
                                                <DataGridTextColumn.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel LastChildFill="False">
                                                            <TextBlock x:Name="txtScreenHeader" Text="Screen" />
                                                            <Button Name="btnScreenFilter" DockPanel.Dock="Right" Margin="10,0,5,0" Width="20" Height="14" Content="&#9660;" FontSize="8" Click="btnScreenFilter_Click" ToolTip="Filter..." Visibility="{Binding IsChecked, ElementName=btnGridFilter, Converter={StaticResource BoolToVis}}"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTextColumn.HeaderTemplate>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding mControl}" CanUserSort="False" CanUserReorder="False" CanUserResize="True"  Header="Control" HeaderStyle="{StaticResource DataGridColumnHeaderStyle7}" Width="192">
                                                <DataGridTextColumn.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel LastChildFill="False">
                                                            <TextBlock x:Name="txtControlHeader" Text="Control" />
                                                            <Button Name="btnControlFilter" DockPanel.Dock="Right" Margin="10,0,5,0" Width="20" Height="14" Content="&#9660;" FontSize="8" Click="btnControlFilter_Click" ToolTip="Filter..." Visibility="{Binding IsChecked, ElementName=btnGridFilter, Converter={StaticResource BoolToVis}}"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTextColumn.HeaderTemplate>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding mKeyword}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyle7}" Width="197">
                                            <DataGridTextColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <DockPanel LastChildFill="False">
                                                        <TextBlock x:Name="txtKeywordHeader" Text="Keyword" />
                                                            <Button Name="btnKeywordFilter" DockPanel.Dock="Right" Margin="10,0,5,0" Width="20" Height="14" Content="&#9660;" FontSize="8" Click="btnKeywordFilter_Click" ToolTip="Filter..." Visibility="{Binding IsChecked, ElementName=btnGridFilter, Converter={StaticResource BoolToVis}}"/>
                                                        </DockPanel>
                                                </DataTemplate>
                                            </DataGridTextColumn.HeaderTemplate>
                                            </DataGridTextColumn>
                                            <!--<DataGridTextColumn Binding="{Binding mParameterString}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  
            			                    Header="Parameters" HeaderStyle="{StaticResource DataGridColumnHeaderStyle4}" MinWidth="175" Width="*">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>-->
                                            <DataGridTemplateColumn CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyle7}" Width="200">
                                                <DataGridTemplateColumn.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel LastChildFill="False">
                                                            <TextBlock x:Name="txtParametersHeader" Text="Parameters" />
                                                            <Button Name="btnParametersFilter" DockPanel.Dock="Right" Margin="10,0,5,0" Width="20" Height="14" Content="&#9660;" FontSize="8" Click="btnParametersFilter_Click" ToolTip="Filter..." Visibility="{Binding IsChecked, ElementName=btnGridFilter, Converter={StaticResource BoolToVis}}"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.HeaderTemplate>
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <DockPanel>
                                                            <TextBlock x:Name="txtParams" Text="{Binding mParameterString}" Foreground="MidnightBlue" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis"></TextBlock>
                                                        </DockPanel>
                                                        <!--<DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding mParameterString, Converter={StaticResource variableparamchecker}}" Value="True">
                                                            <Setter TargetName="txtParams" Property="Foreground" Value="DarkGreen"/>
                                                            <Setter TargetName="txtParams" Property="FontWeight" Value="Bold"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>-->
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Binding="{Binding mStepDelay}" CanUserSort="False" CanUserReorder="False" CanUserResize="True" HeaderStyle="{StaticResource DataGridColumnHeaderStyle7}" Width="*">
                                                <DataGridTextColumn.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel LastChildFill="False">
                                                            <TextBlock x:Name="txtDelayHeader" Text="Delay"/>
                                                            <Button Name="btnDelayFilter" DockPanel.Dock="Right" Margin="10,0,5,0" Width="20" Height="14" Content="&#9660;" FontSize="8" Click="btnDelayFilter_Click" ToolTip="Filter..." Visibility="{Binding IsChecked, ElementName=btnGridFilter, Converter={StaticResource BoolToVis}}"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTextColumn.HeaderTemplate>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </DockPanel>
                                <GridSplitter x:Name="gridSplitter" Grid.Row="1" Grid.RowSpan="1" ShowsPreview="True" Height="5" BorderBrush="Gray"  HorizontalAlignment="Stretch" 
                                          BorderThickness="0,0,0,1" />
                                <DockPanel x:Name="dpData" Grid.Row="2">
                                    <DockPanel.Style>
                                        <Style TargetType="DockPanel">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DockPanel.Style>
                                    <DockPanel DockPanel.Dock="Top">
                                        <GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0"/>
                                        <StackPanel Orientation="Vertical" ClipToBounds="True">
                                            <ToolBar HorizontalAlignment="Center" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Background="Transparent"  Margin="-5,0,-18,0" Padding="6,0,17,0">
                                                <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                                <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnAddData" ToolTip="New Column" Click="btnAddData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <!--<StackPanel Height="16" Width="16">-->
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table_insert_column.png" Height="15" Width="15"/>
                                                        <!--</StackPanel>-->
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">New</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnInsertData" ToolTip="Insert Column" Click="btnInsertData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <!--<StackPanel Height="16" Width="16">-->
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table-insert-icon.png" Height="15" Width="15"/>
                                                        <!--</StackPanel>-->
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Insert</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnRenameData" ToolTip="Rename Column" IsEnabled="False" Click="btnRenameData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/rename.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Rename</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnDeleteData" ToolTip="Delete Column" IsEnabled="False" Click="btnDeleteData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table_delete_column.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Delete</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnLeftData" ToolTip="Move Left" Click="btnLeftData_Click" IsEnabled="False">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/arrow_left.png" Height="12" Width="12" VerticalAlignment="Center" Margin="0,0,0,3"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Left</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnRightData" ToolTip="Move Right" IsEnabled="False" Click="btnRightData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/arrow_right.png" Height="12" Width="12" VerticalAlignment="Center" Margin="0,0,0,3"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Right</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                            </ToolBar>
                                            <TextBlock FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center">Columns</TextBlock>
                                        </StackPanel>
                                        <GridSplitter BorderBrush="Gray" BorderThickness="0,0,1,0" Opacity="0.2"/>
                                        <StackPanel Orientation="Vertical" ClipToBounds="True">
                                            <ToolBar HorizontalAlignment="Center" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Background="Transparent"    Margin="-5,0,-18,0" Padding="6,0,17,0">
                                                <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                                <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnNewRow" ToolTip="New Row" Click="btnNewRow_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table_insert_row.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">New</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnInsertRow" ToolTip="Insert Row" IsEnabled="False" Click="btnInsertRow_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <!--<StackPanel Height="16" Width="16">-->
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table-row-insert-icon.png" Height="15" Width="15"/>
                                                        <!--</StackPanel>-->
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Insert</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnCopyRow" ToolTip="Copy Row" IsEnabled="False" Click="btnCopyRow_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/copy.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Copy Row</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnPasteRow" ToolTip="Paste Row" IsEnabled="False" Click="btnPasteRow_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/paste.png" Height="16" Width="16"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Paste Row</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnDeleteRow" ToolTip="Delete Row" IsEnabled="False" Click="btnDeleteRow_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table_delete_row.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Delete</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnClearRow" ToolTip="Clear All Rows" IsEnabled="False" Click="btnClearRow_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <DockPanel>
                                                            <StackPanel Orientation="Vertical">
                                                                <Image Source="pack://siteoforigin:,,,/Resources/eraser.png" Height="16" Width="16"/>
                                                                <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold">Clear</TextBlock>
                                                            </StackPanel>
                                                            <GridSplitter BorderBrush="Gray" BorderThickness="0,0,1,0" Opacity="0.2" Margin="3" Foreground="Black"/>
                                                            <Menu Background="Transparent" Height="20" Width="20"  Margin="-10,0,0,0">
                                                                <MenuItem x:Name="btnClearType" Click="btnClearType_Click" ToolTip="Clear Options">
                                                                    <MenuItem.Icon>
                                                                        <Image Source="pack://siteoforigin:,,,/Resources/bullet_arrow_down.png" Width="10" Height="20"/>
                                                                    </MenuItem.Icon>
                                                                    <MenuItem.ContextMenu>
                                                                        <ContextMenu x:Name="cmnuClearType"/>
                                                                    </MenuItem.ContextMenu>
                                                                </MenuItem>
                                                            </Menu>
                                                        </DockPanel>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnUpData" ToolTip="Move Up" IsEnabled="False" Click="btnUpData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/arrow_up.png" Height="12" Width="12" VerticalAlignment="Center" Margin="0,0,0,3"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Up</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnDownData" ToolTip="Move Down" IsEnabled="False" Click="btnDownData_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/arrow_down.png" Height="12" Width="12" VerticalAlignment="Center" Margin="0,0,0,3"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Down</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                            </ToolBar>
                                            <TextBlock FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center">Rows</TextBlock>
                                        </StackPanel>
                                        <GridSplitter BorderBrush="Gray" BorderThickness="0,0,1,0" Opacity="0.2"/>
                                        <StackPanel Orientation="Vertical" ClipToBounds="True">
                                            <ToolBar HorizontalAlignment="Center" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Background="Transparent" Margin="-5,0,-18,0" Padding="6,0,17,0">
                                                <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                                <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnImport" ToolTip="Import Data File" Click="Import">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table_import.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Import</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnExport" ToolTip="Export Data File" Click="Export">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/table_export.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Export</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                            </ToolBar>
                                            <TextBlock FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center">Data File</TextBlock>
                                        </StackPanel>
                                        <!--<GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0"/>-->
                                        <GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0"/>
                                    </DockPanel>
                                    <Grid Background="Gray">
                                        <Grid Background="#FF90D2FF" Margin="1,1,1,1">
                                            <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <ContextMenu.Style>
                                                        <Style TargetType="ContextMenu">
                                                            <Setter Property="FontFamily" Value="Calibri"></Setter>
                                                        </Style>
                                                    </ContextMenu.Style>
                                                    <!--<MenuItem Style="{StaticResource TestEditorContextHeaderStyle}" Header="Columns" IsEnabled="False" HorizontalAlignment="Center">
                                                </MenuItem>
                                                <Separator />
                                                <MenuItem Header="New" Click="btnAddData_Click" Name="menuitemAddData"></MenuItem>
                                                <MenuItem Header="Insert" Click="btnInsertData_Click" Name="menuitemInsertData"></MenuItem>
                                                <MenuItem Header="Rename" Click="btnRenameData_Click" Name="menuitemRenameData"></MenuItem>
                                                <MenuItem Header="Delete" Click="btnDeleteData_Click" Name="menuitemDeleteData"></MenuItem>
                                                <MenuItem Header="Move Left" Click="btnLeftData_Click" Name="menuitemLeftData"></MenuItem>
                                                <MenuItem Header="Move Right" Click="btnRightData_Click" Name="menuitemRightData"></MenuItem>
                                                <Separator />-->
                                                    <MenuItem Style="{StaticResource TestEditorContextHeaderStyle}" Header="Rows" IsEnabled="False" HorizontalAlignment="Center">
                                                    </MenuItem>
                                                    <Separator />
                                                    <MenuItem Header="New" Click="btnNewRow_Click" Name="menuitemNewRow" IsEnabled="False"></MenuItem>
                                                    <MenuItem Header="Insert" Click="btnInsertRow_Click" Name="menuitemInsertRow" IsEnabled="False"></MenuItem>
                                                    <MenuItem Header="Copy Row" Click="btnCopyRow_Click" Name="menuitemCopyRow" IsEnabled="False"></MenuItem>
                                                    <MenuItem Header="Paste Row" Click="btnPasteRow_Click" Name="menuitemPasteRow" IsEnabled="False"></MenuItem>
                                                    <MenuItem Header="Delete" Click="btnDeleteRow_Click" Name="menuitemDeleteRow" IsEnabled="False"></MenuItem>
                                                    <MenuItem Header="Move Up" Click="btnUpData_Click" Name="menuitemUpData" IsEnabled="False"></MenuItem>
                                                    <MenuItem Header="Move Down" Click="btnDownData_Click" Name="menuitemDownData" IsEnabled="False"></MenuItem>
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                            <DataGrid x:Name="dgDataDriven" Style="{StaticResource DataGridStyle2}" BorderBrush="Transparent" 
                                                  RowStyle="{StaticResource DataGridRowStyle0}" Width="Auto" HorizontalAlignment="Left" 
                                                  SelectionMode="Single" VerticalAlignment="Stretch" SelectionUnit="CellOrRowHeader" 
                                                  Height="Auto" DockPanel.Dock="Top"
                                                  ScrollViewer.CanContentScroll="True" CellStyle="{StaticResource DataGridCellStyle6}" 
                                                  Loaded="dgDataDriven_Loaded" 
                                                  LoadingRow="dgDataDriven_LoadingRow"
                                                  AutoGeneratingColumn="dgDataDriven_AutoGeneratingColumn"
                                                  SelectedCellsChanged="dgDataDriven_SelectedCellsChanged" VirtualizingStackPanel.IsVirtualizing="False" EnableRowVirtualization="False" 
                                                  Background="#FF90D2FF" VerticalGridLinesBrush="Silver" HorizontalGridLinesBrush="Silver" CellEditEnding="dgDataDriven_CellEditEnding" BeginningEdit="dgDataDriven_BeginningEdit">

                                                <DataGrid.CommandBindings>
                                                    <CommandBinding Command="Copy" Executed="CopyDataCommand" />
                                                    <CommandBinding Command="Paste" Executed="PasteDataCommand"/>
                                                </DataGrid.CommandBindings>

                                                <DataGrid.InputBindings>
                                                    <KeyBinding Key="C" Modifiers="Control" Command="Copy" />
                                                    <KeyBinding Key="V" Modifiers="Control" Command="Paste" />
                                                </DataGrid.InputBindings>
                                                <DataGrid.ColumnHeaderStyle>
                                                    <Style TargetType="DataGridColumnHeader" >
                                                        <Setter Property="Background" Value="DarkGreen" />
                                                        <Setter Property="Foreground" Value="White" />
                                                        <Setter Property="FontSize" Value="11" />
                                                        <Setter Property="Focusable" Value="True"/>
                                                        <Setter Property="Padding" Value="4, 0, 0, 0" />
                                                        <EventSetter Event="Click" Handler="dgDataDriven_ColumnHeaderClick" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsFocused"  Value="True">
                                                                <Setter Property="BorderBrush" Value="BlueViolet" />
                                                                <Setter Property="BorderThickness" Value="2" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                        <!--<Setter Property="MinWidth" Value="125" />-->
                                                    </Style>
                                                </DataGrid.ColumnHeaderStyle>
                                                <DataGrid.RowHeaderStyle>
                                                    <Style TargetType="DataGridRowHeader">
                                                        <Setter Property="FontSize" Value="8"/>
                                                        <Setter Property="Height" Value="25"/>
                                                        <EventSetter Event="Click" Handler="dgDataDriven_RowHeaderClick"/>
                                                    </Style>
                                                </DataGrid.RowHeaderStyle>
                                            </DataGrid>
                                        </Grid>
                                    </Grid>
                                </DockPanel>
                                <DockPanel x:Name="dpOutput" Grid.Row="3">
                                    <DockPanel DockPanel.Dock="Top">
                                        <GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0">
                                            <GridSplitter.Style>
                                                <Style TargetType="GridSplitter">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </GridSplitter.Style>
                                        </GridSplitter>
                                        <StackPanel Orientation="Vertical" ClipToBounds="True">
                                            <ToolBar HorizontalAlignment="Center" ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded" Background="Transparent"  Margin="-5,0,-18,0" Padding="6,0,17,0">
                                                <ToolBar.OverflowMode>Never</ToolBar.OverflowMode>
                                                <ToolBar.IsOverflowOpen>False</ToolBar.IsOverflowOpen>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnPauseTest" ToolTip="Pause" Click="btnPauseTest_Click" IsEnabled="{Binding IsRunInProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, NotifyOnSourceUpdated=True}">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Name ="executionImage" Source="pack://siteoforigin:,,,/Resources/recordpause.png" Height="15" Width="15"/>
                                                        <TextBlock Name="executionLabel" HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Pause</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button x:Name="btnCancelTest" Style="{StaticResource TestEditorToolBarButtonStyle}" ToolTip="Cancel" Click="btnCancelTest_Click"
                                                        IsEnabled="{Binding IsRunInProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, NotifyOnSourceUpdated=True}">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/button_cancel.ico" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Cancel</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button x:Name="btnSaveTestLogs" ToolTip="Save Logs" Click="btnSaveTestLogs_Click">
                                                    <Button.Style>
                                                        <Style TargetType="Button">                                        
                                                            <Setter Property="Height" Value="35" />
                                                            <Setter Property="Width" Value="Auto" />
                                                            <Setter Property="MinWidth" Value="30" />
                                                            <Setter Property="Margin" Value="0,0,1,0" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsRunInProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, NotifyOnSourceUpdated=True}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False"/>
                                                                </DataTrigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/save.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Save Logs</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button x:Name="btnEmailTestLogs" ToolTip="Email Logs" Click="btnEmailTestLogs_Click">
                                                    <Button.Style>
                                                        <Style TargetType="Button">                      
                                                            <Setter Property="Height" Value="35" />
                                                            <Setter Property="Width" Value="Auto" />
                                                            <Setter Property="MinWidth" Value="30" />
                                                            <Setter Property="Margin" Value="0,0,1,0" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsRunInProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, NotifyOnSourceUpdated=True}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False"/>
                                                                </DataTrigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/envelope.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Email Logs</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                                <Button Style="{StaticResource TestEditorToolBarButtonStyle}" x:Name="btnLastResults" ToolTip="View the last test execution result" Click="btnLastResults_Click">
                                                    <StackPanel Orientation="Vertical">
                                                        <Image Source="pack://siteoforigin:,,,/Resources/text.png" Height="15" Width="15"/>
                                                        <TextBlock HorizontalAlignment="Center" FontSize="9" TextWrapping="Wrap" FontWeight="SemiBold" Height="12">Last Results</TextBlock>
                                                    </StackPanel>
                                                </Button>
                                            </ToolBar>
                                        </StackPanel>
                                        <GridSplitter BorderBrush="Gray" BorderThickness="1,0,0,0">
                                            <GridSplitter.Style>
                                                <Style TargetType="GridSplitter">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </GridSplitter.Style>
                                        </GridSplitter>
                                    </DockPanel>
                                    <Grid Background="Gray">
                                        <Grid Background="#FF90D2FF" Margin="1,1,1,1">
                                            <TextBox x:Name="txtOutput" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" 
                                                     Text="{Binding Path=Output, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtOutput_TextChanged" IsReadOnly="True" FontSize="10">
                                                <TextBox.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                                                        <GradientStop Color="#FFABADB3" Offset="0.05"/>
                                                        <GradientStop Color="#FFE2E3EA" Offset="0.07"/>
                                                        <GradientStop Color="#FF828790" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </TextBox.BorderBrush>
                                            </TextBox>
                                        </Grid>
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </DockPanel>
                    </TabItem>
                </TabControl>
            </DockPanel>
        </Grid>
        <StatusBar Grid.Row="1" Background="White">
            <StatusBar.Resources>
                <ControlTemplate x:Key="SquareButton" TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" 
                        Width="15" 
                        Height="15"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/file.png" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="ToolTip">
                                <Setter.Value>Click to display server values (TFS)</Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/database.ico" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="ToolTip">
                                <Setter.Value>Click to display local values</Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsServerInfoToggleVisible, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsServerInfoToggleVisible, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </StatusBar.Resources>
            <StatusBarItem Margin="5,0,0,0">
                <StatusBarItem.Style>
                    <Style TargetType="StatusBarItem">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsTestEditorBusy, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=StatusText, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                    <ProgressBar Width="100" Height="15" Margin="5,0,0,0" IsIndeterminate="True">
                        <ProgressBar.Resources>
                            <Style TargetType="{x:Type ProgressBar}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsProgressBarVisible, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsProgressBarVisible, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="false">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Resources>
                    </ProgressBar>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <StatusBarItem.Style>
                    <Style TargetType="StatusBarItem">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsTestInfoVisible, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="chkFileInfoToggle" Template="{StaticResource SquareButton}" Margin="5,0,0,0" Click="chkFileInfoToggle_Click"/>
                    <TextBlock FontWeight="Bold" Margin="5,0,0,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="Last Modified:"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=chkFileInfoToggle, Path=IsChecked}" Value="True">
                                        <Setter Property="Text" Value="Last Check-in:"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>        
                    </TextBlock>
                    <TextBlock FontWeight="Bold" Foreground="Navy" Margin="5,0,0,0" FontSize="11">
                        [Keyword]
                        <TextBlock FontWeight="Normal" Text="{Binding Path=LastModifiedDateKeyword, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Navy" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=LastModifiedDateKeyword, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="NOT FOUND">
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock FontWeight="Normal" Text="{Binding Path=LastModifiedByUserKeyword, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                    </TextBlock>
                    <TextBlock FontWeight="Bold" Foreground="Green" Margin="5,0,5,0" FontSize="11">
                        [Data]
                        <TextBlock FontWeight="Normal" Text="{Binding Path=LastModifiedDateData, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Green" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=LastModifiedDateData, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="NOT FOUND">
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock FontWeight="Normal" Text="{Binding Path=LastModifiedByUserData, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>               
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Popup x:Name="popupFilter" Placement="MousePoint"  StaysOpen="False">
            <Border Background="White" BorderBrush="Gray" BorderThickness="1,1,1,1">
                <Grid Width="235" Height="235">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"></RowDefinition>
                        <RowDefinition Height="25"></RowDefinition>
                        <RowDefinition Height="150"></RowDefinition>
                        <RowDefinition Height="30"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Filter for column :</Label>
                        <TextBlock x:Name="txtColumnName" FontWeight="Bold" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" Margin="0,0,9,0">
                        <Button x:Name="btnFilterOK" Style="{StaticResource ButtonStyle2}" Click="btnFilterOK_Click"  VerticalAlignment="Center">Apply</Button>
                        <Button x:Name="btnFilterCancel" Style="{StaticResource ButtonStyle2}" Click="btnFilterCancel_Click" VerticalAlignment="Center">Cancel</Button>
                    </StackPanel>
                    <Label Grid.Row="1" VerticalAlignment="Bottom">Current Values :</Label>
                    <ListBox ItemsSource="{Binding CheckedListItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" x:Name="lstItems" Grid.Row="2" Margin="10,0,10,4">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Item}" Tag="{Binding ItemName}" Checked="checkBoxListItem_Click" Unchecked="checkBoxListItem_Click"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>
        </Popup>
    </Grid>
    <!-- Original Code -->
    <!--<Grid>
        <Grid.Background>
            <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/DeltekBackground.png" Stretch="UniformToFill"/>
        </Grid.Background>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="761"/>
            <ColumnDefinition />
            -->
    <!--<ColumnDefinition Width="99"/>
            <ColumnDefinition Width="176"/>-->
    <!--
        </Grid.ColumnDefinitions>
        <DockPanel LastChildFill="True">
            <StackPanel Orientation="Vertical" x:Name="PanelMainLeft" Grid.Column="0" Margin="10,10,10,10">
                <StackPanel x:Name="panelMainTestButtons" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Column="3" Margin="0,0,3,5">
                    <Label Content="Test Name:" Style="{StaticResource LabelStyle1}"/>
                    <TextBox x:Name="txtTestName" Style="{StaticResource TextBoxStyle1}" Width="486"/>
                    <Button Style="{StaticResource ButtonStyle2}" Content="New" x:Name="btnNewTest" Click="btnNewTest_Click" VerticalAlignment="Center"/>
                    <Button Style="{StaticResource ButtonStyle2}" Content="Save" x:Name="btnSaveTest" Click="btnSaveTest_Click" VerticalAlignment="Center" />
                    <Button Style="{StaticResource ButtonStyle2}" Content="Save As" x:Name="btnSaveTestAs" Click="btnSaveTestAs_Click" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" x:Name="PanelTestDescription" Margin="0,4,0,10">
                    <Label Content="Description:" Style="{StaticResource LabelStyle1}"/>
                    <TextBox x:Name="txtTestDescription" Style="{StaticResource TextBoxStyle2}" Width="652" Height="61"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" x:Name="PanelTestInstance" Margin="0,0,0,0" HorizontalAlignment="Left">
                    <Label Content="Test:" Style="{StaticResource LabelStyle1}"/>
                </StackPanel>
                <Grid Background="Gray" Margin="9,0,0,0" Width="745">
                    <StackPanel Orientation="Horizontal" x:Name="PanelUserPassword" Margin="1,1,14,1" Background="#FF90D2FF" Grid.Column="0">
                        <Label Content="Test Instance: " Style="{StaticResource LabelStyle1}" Width="80" VerticalAlignment="Center"/>
                        <Button x:Name="btnPreviousTest" Content="&lt;" Style="{StaticResource ButtonStyle2}" Width="30" VerticalAlignment="Center" Click="btnPreviousTest_Click"/>
                        <TextBox x:Name="txtCurrentInstance" Width="30" Margin="3,0,0,0" Height="20" VerticalAlignment="Center" PreviewTextInput="txtCurrentInstance_PreviewTextInput" TextChanged="txtCurrentInstance_TextChanged" />
                        <Label Content="/" Style="{StaticResource LabelStyle1}" Width="15" VerticalAlignment="Center"/>
                        <TextBox x:Name="txtTotalInstance" Width="30" Margin="0,0,2,0" IsEnabled="False" Height="20" VerticalAlignment="Center" TextChanged="txtTotalInstance_TextChanged" />
                        <Button x:Name="btnNextTest" Content="&gt;" Style="{StaticResource ButtonStyle2}" Width="30" Margin="2,2,7,2" VerticalAlignment="Center" Click="btnNextTest_Click"/>
                        -->
    <!--<Label Content="Test Instance:" Style="{StaticResource LabelStyle1}" Margin="0,0,225,0"/>-->
    <!--<Label Content="Bckp/Rstr Global.dat:"/>-->
    <!--
                        <Button x:Name="btnAddTest" Content="Add" Style="{StaticResource ButtonStyle2}" Margin="7,0,5,0" Width="40" VerticalAlignment="Center" Click="btnAddTest_Click"/>
                        -->
    <!--<Label Content="Bckp/Rstr Proj.dat:"/>-->
    <!--
                        <Button x:Name="btnInsertTest" Content="Insert" Style="{StaticResource ButtonStyle2}" Margin="0,0,5,0" Width="40" VerticalAlignment="Center" Click="btnInsertTest_Click"/>
                        -->
    <!--<Label Content="Delete Config:"/>-->
    <!--
                        <Button x:Name="btnDeleteTest" Content="Delete" Style="{StaticResource ButtonStyle2}" Margin="0,0,9,0" Width="40" VerticalAlignment="Center" Click="btnDeleteTest_Click" IsEnabled="False"/>
                        <Button Style="{StaticResource ButtonStyle2}" x:Name="btnRun" Content="Run" Margin="306,3,2,3" Click="btnRun_Click" BorderThickness="3" Width="40" HorizontalAlignment="Right"/>


                    </StackPanel>
                </Grid>
                <DataGrid x:Name="dgTestSteps" ItemsSource="{Binding}" Grid.Column="0" VerticalScrollBarVisibility="Visible"
            	Style="{StaticResource DataGridStyle1}" RowStyle="{StaticResource DataGridRowStyle1}" CellStyle="{StaticResource DataGridCellStyle4}"
            	HorizontalScrollBarVisibility="Hidden" 
            	SelectionMode="Single" Margin="10,0,0,0" Height="302" RowHeaderWidth="0" 
            	IsReadOnly="True" 
            	SelectionChanged="dgTestSteps_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding mStepNumber}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Step" HeaderStyle="{StaticResource DataGridColumnHeaderStyle0}" Width="40" />
                        <DataGridTextColumn Binding="{Binding mExecute}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Execute" HeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" Width="60" />
                        <DataGridTextColumn Binding="{Binding mScreen}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Screen" HeaderStyle="{StaticResource DataGridColumnHeaderStyle3}" Width="115" />
                        <DataGridTextColumn Binding="{Binding mControl}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Control" HeaderStyle="{StaticResource DataGridColumnHeaderStyle2}" MaxWidth="180" Width="140" />
                        <DataGridTextColumn Binding="{Binding mKeyword}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Keyword" HeaderStyle="{StaticResource DataGridColumnHeaderStyle3}" Width="150" />
                        <DataGridTextColumn Binding="{Binding mParameterString}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  
            			Header="Parameters" HeaderStyle="{StaticResource DataGridColumnHeaderStyle4}" MaxWidth="190" Width="175">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding mStepDelay}" CanUserSort="False" CanUserReorder="False" CanUserResize="False"  Header="Delay" HeaderStyle="{StaticResource DataGridColumnHeaderStyle5}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel x:Name="panelStepButtons" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,5,0,0">
                    <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepNew" Content="New" Click="btnTestStepNew_Click"/>
                    <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepCopy" Content="Copy" Click="btnTestStepCopy_Click"/>
                    <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepDelete" Content="Delete" Click="btnTestStepDelete_Click" IsEnabled="False"/>
                    <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepUp" Content="Up" Click="btnTestStepUp_Click" IsEnabled="False"/>
                    <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepDown" Content="Down" Click="btnTestStepDown_Click" BorderThickness="3" IsEnabled="False"/>
                </StackPanel>
            </StackPanel>
        </DockPanel>

        <StackPanel Orientation="Vertical" x:Name="panelMainRight" Grid.Column="1" Margin="10,-3,0,10" HorizontalAlignment="Left" Grid.ColumnSpan="2" >
            <StackPanel Orientation="Vertical" x:Name="panelmMainRightBottom">
                <Label x:Name="lblStep" Content="Step " BorderThickness="0,10,0,0" />
                <Label x:Name="lblExecuteStep" Content="Execute Step:" Margin="0"/>
                <ComboBox x:Name="cmbExecuteStep" Style="{StaticResource ComboBoxStyle1}" IsEditable="True">
                    <ComboBoxItem>true</ComboBoxItem>
                    <ComboBoxItem>false</ComboBoxItem>
                </ComboBox>
                <Label x:Name="lblScreen" Content="Screen:" Margin="0,5,0,0"/>
                <ComboBox x:Name="cmbComponent" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" SelectionChanged="cmbComponent_SelectionChanged" IsEditable="True" />
                <Label x:Name="lblControl" Content="Control:"/>
                <ComboBox x:Name="cmbControl" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" SelectionChanged="cmbControl_SelectionChanged" IsEditable="True"/>
                <Label x:Name="lblKeyword" Content="Keyword:" Margin="0,5,0,0"/>
                <ComboBox x:Name="cmbKeyword" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding}" SelectionChanged="cmbKeyword_SelectionChanged" MouseEnter="cmbKeyword_MouseEnter" IsEditable="True"/>

                <Label x:Name="lblParameters" Content="Parameters:" Margin="0,5,0,0"/>
                <TextBox x:Name="txtParameters" Style="{StaticResource TextBoxStyle1}" Width="250" Margin="0" Height="50" TextWrapping="Wrap"/>

                <Label x:Name="lblStepDelay" Content="Step Delay (occurs after step executes):" Margin="0,5,0,0"/>
                <TextBox x:Name="txtDelay" Style="{StaticResource TextBoxStyle1}" Width="30" MaxLength="2" BorderThickness="2" Margin="0,0,5,0"/>
                <Button Style="{StaticResource ButtonStyle2}" x:Name="btnTestStepUpdate" Content="Update" Margin="0"
                    HorizontalAlignment="Right"
                    Click="btnTestStepUpdate_Click" BorderThickness="3"/>
                <CheckBox x:Name="chkUpdateAll" Content="Update all test instances" HorizontalAlignment="Right"/>
            </StackPanel>
        </StackPanel>
    </Grid>-->
</Window>

