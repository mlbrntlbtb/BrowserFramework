<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TestRunner.Controls">

        <!--Context Menu Controls-->
        <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
            <StackPanel Margin="0,0,0,0" Background="White"/>
        </ItemsPanelTemplate>

        <ContextMenu x:Name="ctxEnvironment" x:Key="ctxEnvironment" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}">
        </ContextMenu>
        <ContextMenu x:Name="ctxBrowser" x:Key="ctxBrowser" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}">
        </ContextMenu>
        <ContextMenu x:Name="ctxIsOpen" x:Key="ctxIsOpen" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}">
        </ContextMenu>
        <ContextMenu x:Name="ctxSaveDialogTreeView" x:Key="ctxSaveDialogTreeView" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}">
        </ContextMenu>
        <ContextMenu x:Name="ctxDisplayName" x:Key="ctxDisplayName" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}">
        </ContextMenu>
        <ContextMenu x:Name="ctxDisplayNameDependency1" x:Key="ctxDisplayNameDependency1" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}"/>
        <ContextMenu x:Name="ctxDisplayNameDependency2" x:Key="ctxDisplayNameDependency2" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}"/>
        <ContextMenu x:Name="ctxExecute" x:Key="ctxExecute" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}"/>
        <ContextMenu x:Name="ctxQueueType" x:Key="ctxQueueType" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}"/>
        <ContextMenu x:Name="ctxSchedulerType" x:Key="ctxSchedulerType" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}"/>
        <ContextMenu x:Name="ctxResultOptionType" x:Key="ctxResultOptionType" FontSize="10" Width="Auto" ItemsPanel="{StaticResource MenuItemPanelTemplate}" />

    <Style TargetType="{x:Type local:CustomPopup}" x:Key="popupStyle1">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:CustomPopup}">
                        <StackPanel Width="Auto" Height="Auto" Background="Transparent">
                            <Border BorderThickness="1" BorderBrush="Gray" CornerRadius="5" Padding="4" Height="50" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <StackPanel Margin="1,1,1,1">
                                    <Label x:Name="PART_PopupLabel" VerticalAlignment="Center" Content="{TemplateBinding PopupLabel}"/>
                                </StackPanel>
                            </Border>
                            <Path x:Name="arrow" Data="M 0 0 L 6 6 L 12 0 Z" Fill="Gray" Stroke="Gray" StrokeThickness="1" Margin="5,0,0,0"
								          VerticalAlignment="Bottom" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <Style x:Key="contextMenuStyle1" x:Name="contextMenuStyle1" TargetType="ContextMenu">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="FontSize" Value="10" />
            <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}" />
        </Style>
        <!--Context Menu Controls-->

        <WrapPanel x:Name="lvwWP" x:Key="lvwWP" Orientation="Vertical" Height="100" VerticalAlignment="Top"/>
        <!--<DataTemplate x:Key="SchedulerEditingControl">
            -->
        <!--<StackPanel Orientation="Horizontal">
                <RadioButton Content="At"></RadioButton>
                <DatePicker></DatePicker>
            </StackPanel>-->
        <!--
            <Grid>
                <Popup Placement="Relative" IsOpen="True" Width="200" Height="50" >
                    <Grid Background="AliceBlue">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"></RowDefinition>
                            <RowDefinition Height="25"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                            <RadioButton Content="At" Margin="2,0,2,0"></RadioButton>
                            <TextBox Margin="2,0,2,0" Height="20" Width="50" VerticalAlignment="Top"></TextBox>
                            <StackPanel Orientation="Vertical">
                                <Button Height="9" Width="15"></Button>
                                <Button Height="9" Width="15"></Button>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="1">
                            <RadioButton Content="At" Margin="2,0,2,0"></RadioButton>
                            <ComboBox Margin="2,0,2,0" Height="20" Width="50" VerticalAlignment="Top"></ComboBox>
                        </StackPanel>
                    </Grid>
                </Popup>
            </Grid>
            -->
        <!--<StackPanel Orientation="Horizontal">
                <RadioButton Content=" After"></RadioButton>
                <ComboBox></ComboBox>
            </StackPanel>-->
        <!--
        </DataTemplate>-->


        <Style x:Key="DataGridStyle1" TargetType="DataGrid" >
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="Background" Value="#FF90D2FF" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="ClipboardCopyMode" Value="IncludeHeader" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="VerticalGridLinesBrush" Value="Silver" />
            <Setter Property="HorizontalGridLinesBrush" Value="Silver" />
            <Setter Property="HeadersVisibility" Value="Column" />
        </Style>
        <Style x:Key="DataGridStyle2" TargetType="DataGrid" >
            <Setter Property="AutoGenerateColumns" Value="True" />
            <Setter Property="Background" Value="#FF90D2FF" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="CanUserResizeColumns" Value="True" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="True" />
            <Setter Property="ClipboardCopyMode" Value="IncludeHeader" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinColumnWidth" Value="125" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />

        </Style>
        <Style x:Key="DataGridStyle3" TargetType="DataGrid" >
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="ClipboardCopyMode" Value="IncludeHeader" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{x:Static SystemColors.ControlLightBrush}" />
            <!--<Setter Property="HorizontalGridLinesBrush" Value="Transparent" />-->
            <!--<Setter Property="VerticalGridLinesBrush" Value="#FFE3E9EF" />-->
            <Setter Property="VerticalGridLinesBrush" Value="{x:Static SystemColors.ControlDarkBrush}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle0" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="35" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle0b" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="DarkGreen" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="35" />
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="70" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
    <Style x:Key="DataGridColumnHeaderStyle1b" TargetType="DataGridColumnHeader" >
        <Setter Property="Background" Value="DarkGreen" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinWidth" Value="70" />
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle2" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
    <Style x:Key="DataGridColumnHeaderStyle2b" TargetType="DataGridColumnHeader" >
        <Setter Property="Background" Value="DarkGreen" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinWidth" Value="100" />
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle3" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="150" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle4" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="190" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
    <Style x:Key="DataGridColumnHeaderStyle4b" TargetType="DataGridColumnHeader" >
        <Setter Property="Background" Value="DarkGreen" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinWidth" Value="190" />
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle5" TargetType="DataGridColumnHeader" >
        <Setter Property="Background" Value="Navy" />
        <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle5b" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="DarkGreen" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle6" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="MinWidth" Value="380" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
        </Style>
    <Style x:Key="DataGridColumnHeaderStyle7" TargetType="DataGridColumnHeader" >
        <Setter Property="Background" Value="Navy" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Padding" Value="4, 0, 0, 0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyleTestQueue" TargetType="DataGridColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Padding" Value="4, 0, 0, 0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="DataGridRowStyle0" TargetType="DataGridRow" >
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="BlueViolet" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
        </Style.Triggers>
        </Style>
        <Style x:Key="DataGridRowStyle1" TargetType="DataGridRow" >
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="BlueViolet" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
                <DataTrigger Binding="{Binding mKeyword}" Value="LogComment">
                    <Setter Property="Background" Value="Orange"/>
                    <Setter Property="BorderBrush" Value="OrangeRed"/>
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding mKeyword}" Value="Note">
                    <Setter Property="Background" Value="Yellow"/>
                    <Setter Property="BorderBrush" Value="YellowGreen"/>
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding mKeyword}" Value="Hint">
                    <Setter Property="Background" Value="LightGreen"/>
                    <Setter Property="BorderBrush" Value="Green"/>
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding mKeyword}" Value="ExpectedResult">
                    <Setter Property="Background" Value="LightPink"/>
                    <Setter Property="BorderBrush" Value="DeepPink"/>
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding mKeyword}" Value="Step">
                    <Setter Property="Background" Value="LightPink"/>
                    <Setter Property="BorderBrush" Value="DeepPink"/>
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
            <DataTrigger Binding="{Binding mDisplayExecute}" Value="false">
                    <Setter Property="Foreground"  Value="Gray"/>
                    <Setter Property="FontStyle"  Value="Italic"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridRowStyleNoSelect" TargetType="DataGridRow" >
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Background" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridRowHeaderStyle1" TargetType="DataGridRowHeader">
            <Setter Property="FontSize" Value="8"/>
        </Style>

        <Style x:Key="DataGridCellStyle1" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="MaxWidth" Value="190" />
            <Setter Property="BorderThickness" Value="0.25"/>
        </Style>
        <Style x:Key="DataGridCellStyle1b" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="MaxWidth" Value="Infinity" />
            <Setter Property="BorderThickness" Value="0.25"/>
        </Style>
        <Style x:Key="DataGridCellStyle2" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DodgerBlue" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle3" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DodgerBlue" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle4" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="MaxWidth" Value="190" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="LemonChiffon" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle5" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="LemonChiffon" />
                </Trigger>
                <DataTrigger Binding="{Binding mDisplayExecute}" Value="false">
                    <Setter Property="Foreground"  Value="Gray"/>
                    <Setter Property="FontStyle"  Value="Italic"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle6" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="LemonChiffon" />
                    <Setter Property="BorderBrush" Value="BlueViolet" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle7" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DodgerBlue" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle8" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="LemonChiffon" />
                </Trigger>
            </Style.Triggers>
        </Style>
    <Style x:Key="DataGridCellStyleNoSelect" TargetType="DataGridCell" >
            <Setter Property="Foreground" Value="Navy" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value="0.25"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <!--<Setter Property="Foreground" Value="White" />-->
            <!--<Setter Property="Background" Value="SteelBlue" />-->
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="MinWidth" Value="30" />
            <Setter Property="Margin" Value="0,0,1,0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">

                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SlidingToggleButtonStyle" TargetType="ToggleButton">
            <Style.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="false">
                <Setter Property="ToolTip" Value="Edit mode is OFF"></Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter Property="ToolTip" Value="Edit mode is ON"></Setter>
            </Trigger>
            </Style.Triggers>
            <Setter Property="Height" Value="13"/>
            <Setter Property="Width" Value="50" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="#FAFAFB" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="WhiteSmoke" />
            <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Viewbox Stretch="Uniform">
                                <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                                    <Ellipse Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.25"/>
                                    <Ellipse Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.25"/>
                                    <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.25,0,0.25"/>
                                    <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="WhiteSmoke" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.25">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform X="0" Y="0" />
                                        </Ellipse.RenderTransform>
                                        <Ellipse.BitmapEffect>
                                            <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.8" Direction="270" Color="Gray"/>
                                        </Ellipse.BitmapEffect>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True" >
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF90D2FF" Duration="0:0:0.25" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.25" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.75" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.75" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="Button" >
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="Button" >
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="Button" >
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle4" TargetType="Button" >
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolbarButtonStyle" TargetType="Button" >
            <Setter Property="BorderBrush" Value="SteelBlue" />
            <Setter Property="Background" Value="White" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
       
        <!-- Flat Button Style -->

        <Color x:Key="DefaultColor" A="255" R="240" G ="240" B="240"/>

        <Color x:Key="HighlightColor" A="255" R="229" G ="229" B="229"/>

        <Color x:Key="PressedColor" A="255" R="215" G ="215" B="215"/>



        <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}" />

        <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />

        <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />
        <Style TargetType="Button" x:Key="FlatButtonStyle">

            <Setter Property="OverridesDefaultStyle" Value="True" />

            <Setter Property="Background" Value="{StaticResource DefaultBrush}" />

            <Setter Property="BorderThickness" Value="1" />

            <Setter Property="BorderBrush" Value="Silver" />

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="Button">

                        <Border BorderThickness="{TemplateBinding BorderThickness}"

                    BorderBrush="{TemplateBinding BorderBrush}"

                    Background="{TemplateBinding Background}"

                    Padding="{TemplateBinding Padding}"

                    CornerRadius="0">

                            <ContentControl Content="{TemplateBinding Content}" />

                        </Border>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />

                </Trigger>

            </Style.Triggers>

        </Style>
        <Style x:Key="TestEditorContextHeaderStyle" TargetType="MenuItem">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TestEditorToolBarButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="MinWidth" Value="30" />
            <Setter Property="Margin" Value="0,0,1,0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonTransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BigButtonStyle" TargetType="Button" >
            <Setter Property="BorderBrush" Value="SteelBlue" />
            <Setter Property="Background" Value="White" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ComboBoxStyle1" TargetType="ComboBox" >
            <Setter Property="Width" Value="250" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
    <Style x:Key="ComboBoxStyleVSP" TargetType="ComboBox" >
        <Setter Property="Width" Value="250" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="MaxDropDownHeight" Value="100"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxStyle1" TargetType="CheckBox" >
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="LabelStyle1" TargetType="Label" >
            <Setter Property="Width" Value="80" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="LabelStyle2" TargetType="Label" >
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Foreground" Value="Blue" />
        </Style>
        <Style x:Key="TextStyle1" TargetType="TextBlock" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="FontWeight" Value="ExtraBold" />
            <Setter Property="FontSize" Value="11" />
        </Style>
        <Style x:Key="TextStyle2" TargetType="TextBlock" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="FontSize" Value="10" />
        </Style>
        <Style x:Key="TextBoxStyle1" TargetType="TextBox" >
            <Setter Property="Width" Value="550" />
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="TextBoxStyle2" TargetType="TextBox" >
            <Setter Property="Width" Value="550" />
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="Height" Value="50" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="TextBoxStyle3" TargetType="TextBox" >
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="50" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="ListBoxStyle1" TargetType="ListBox" >
            <Setter Property="Width" Value="550" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="100" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="GridViewColumnHeader" >
            <Setter Property="Background" Value="Navy" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="Gradient1" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Beige" Offset="0.0"/>
            <GradientStop Color="LemonChiffon" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Gradient2" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Beige" Offset="0.0"/>
            <GradientStop Color="#FFD8D8D8" Offset="1.0"/>
        </LinearGradientBrush>
        <Image x:Key="AddIcon" Source="pack://siteoforigin:,,,/Resources/add.png"/>
        <Image x:Key="EditIcon" Source="pack://siteoforigin:,,,/Resources/edit.png"/>
        <Image x:Key="DeleteIcon" Source="pack://siteoforigin:,,,/Resources/delete.ico"/>
        <Image x:Key="FindIcon" Source="pack://siteoforigin:,,,/Resources/search.png"/>
        <Image x:Key="RecordIcon" Source="pack://siteoforigin:,,,/Resources/record.png"/>
        <Image x:Key="RefreshIcon" Source="pack://siteoforigin:,,,/Resources/refresh.ico"/>
        <Image x:Key="OnlineIcon" Source="pack://siteoforigin:,,,/Resources/instance.png"/>
        <Image x:Key="OfflineIcon" Source="pack://siteoforigin:,,,/Resources/refresh.ico"/>
        <Image x:Key="CheckIcon" Source="pack://siteoforigin:,,,/Resources/check.ico"/>
        <Image x:Key="CancelIcon" Source="pack://siteoforigin:,,,/Resources/button_cancel.ico"/>
        <Image x:Key="SyncTests" Source="pack://siteoforigin:,,,/Resources/folder_sync.png"/>
        <Image x:Key="Clear" Source="pack://siteoforigin:,,,/Resources/clearbroom.png"/>

        <!--expander styles-->
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="icon" Source="pack://siteoforigin:,,,/Resources/bullet_toggle_plus.png"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Source" TargetName="icon" Value="pack://siteoforigin:,,,/Resources/bullet_toggle_minus.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpandCollapseStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="icon" Source="pack://siteoforigin:,,,/Resources/bullet_toggle_plus.png" ToolTip="Expand"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Source" TargetName="icon" Value="pack://siteoforigin:,,,/Resources/bullet_toggle_minus.png"/>
                                <Setter Property="ToolTip" TargetName="icon" Value="Collapse"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StatusGroupExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OnAndOff" TargetType="{x:Type Image}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="ON">
                    <Setter Property="Source" Value="pack://siteoforigin:,,,/Resources/online.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="OFF">
                    <Setter Property="Source" Value="pack://siteoforigin:,,,/Resources/offline.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonsExpandable" TargetType="StackPanel">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True" >
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PopupContentStyle" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <StackPanel Width="Auto" Height="Auto" Background="Transparent">
                                <Border BorderThickness="1" BorderBrush="Gray" CornerRadius="5" Padding="4" Height="50" Background="White" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <StackPanel Margin="1,1,1,1">
                                        <ContentPresenter />
                                    </StackPanel>
                                </Border>
                            <Path x:Name="arrow" Data="M 0 0 L 6 6 L 12 0 Z" Fill="Gray" Stroke="Gray" StrokeThickness="1" Margin="5,0,0,0"
                                          VerticalAlignment="Bottom" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <!--expander styles-->
  
</ResourceDictionary>